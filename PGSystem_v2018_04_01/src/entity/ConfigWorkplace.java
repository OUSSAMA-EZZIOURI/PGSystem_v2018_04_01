package entity;
// Generated 6 fï¿½vr. 2016 21:43:55 by Hibernate Tools 3.6.0

import helper.Helper;
import java.util.List;
import org.hibernate.Query;
import helper.HQLHelper;
import hibernate.DAO;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import ui.UILog;

/**
 * ConfigProject generated by hbm2java
 */
@Entity
@Table(name = "config_workplace")
public class ConfigWorkplace extends DAO implements Serializable{
    
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "config_workplace_id_seq")
    @SequenceGenerator(name = "config_workplace_id_seq", sequenceName = "config_workplace_id_seq", allocationSize = 1)
    private Integer id;
    
    @Column(name="workplace")
    private String workplace;
    
    @Column(name="segment")
    private String segment;

    public ConfigWorkplace() {
    }

    public ConfigWorkplace(String configWorkplace) {
        this.workplace = configWorkplace;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getWorkplace() {
        return workplace;
    }

    public void setWorkplace(String workplace) {
        this.workplace = workplace;
    }

    public String getSegment() {
        return segment;
    }

    public void setSegment(String segment) {
        this.segment = segment;
    }        

    //######################################################################
    public List select() {
        Helper.startSession();
        Query query = Helper.sess.createQuery(HQLHelper.GET_ALL_WORKPLACES);
        UILog.info(query.getQueryString());
        Helper.sess.getTransaction().commit();
        return query.list();
    }
    
    public List selectBySegment(String segment) {        
        Helper.startSession();
        Query query ;
        if(!"".equals(segment) || segment.length()!=0){            
            query = Helper.sess.createQuery(HQLHelper.GET_WORKPLACES_BY_SEGMENT);
            query.setParameter("segment", segment);
        }else
            
            query = Helper.sess.createQuery(HQLHelper.GET_ALL_WORKPLACES);
        
        Helper.sess.getTransaction().commit();
        return query.list();
    }

}