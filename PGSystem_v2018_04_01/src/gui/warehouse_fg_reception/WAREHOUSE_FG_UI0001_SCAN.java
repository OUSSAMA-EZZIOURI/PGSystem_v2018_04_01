/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.warehouse_fg_reception;

import __main__.GlobalMethods;
import __main__.GlobalVars;
import helper.Helper;
import helper.HQLHelper;
import entity.BaseContainer;
import entity.BaseHarness;
import entity.HisBaseContainer;
import entity.HisLogin;
import entity.PackagingStockMovement;
import gui.packaging.PackagingVars;
import gui.packaging.reports.PACKAGING_UI0014_PalletHistory;
import gui.warehouse_dispatch.state.WarehouseHelper;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.SQLQuery;

/**
 *
 * @author user
 */
public class WAREHOUSE_FG_UI0001_SCAN extends javax.swing.JFrame {

    Vector<String> searchResult_table_header = new Vector<String>();
    Vector searchResult_table_data = new Vector();
    private BaseContainer bc = new BaseContainer();

    /**
     * Creates new form UI0010_PalletDetails
     *
     * @param context
     * @param parent
     */
    public WAREHOUSE_FG_UI0001_SCAN(Object[] context, JFrame parent) {
        initComponents();
        //Initialiser les valeurs globales de test (Pattern Liste,...)
        Helper.startSession();

        initGui();

        this.setVisible(true);
    }

    /**
     * Creates new form UI0010_PalletDetails
     *
     * @param parent
     * @param modal
     * @param PalletNumber : Requested container number to be displayed
     */
    public WAREHOUSE_FG_UI0001_SCAN(java.awt.Frame parent, boolean modal, String PalletNumber) {
        //super(parent, modal);
        //this.setModal(modal);
        initComponents();
        initGui();
        this.searchForPallet(PalletNumber);
        this.search_txtbox.setText(PalletNumber);
    }

    /**
     * Creates new form UI0010_PalletDetails
     *
     * @param parent
     * @param modal
     * @param PalletNumber : Requested container number to be displayed
     * @param drop : Show drop button in the form
     * @param printOpenSheet : Show print open sheet button in the form
     * @param printCloseSheet : Show print close sheet button in the form
     *
     */
    public WAREHOUSE_FG_UI0001_SCAN(java.awt.Frame parent, boolean modal,
            String PalletNumber, boolean drop, boolean printOpenSheet,
            boolean printCloseSheet) {
        //super(parent, modal);
        //this.setModal(modal);
        initComponents();

        initGui();
        this.searchForPallet(PalletNumber);
        this.search_txtbox.setText(PalletNumber);
    }

    private void initGui() {
        //Center the this dialog in the screen
        Helper.centerJFrame(this);

        //Desable table edition
        disableEditingTable();

        //Load table header
        load_container_table_header();

        this.setVisible(true);
        //Disable resizing
        //this.setResizable(false);
    }

    public void showMsg(String msg, int msgLevel) {
        if (msgLevel == 1) {//info msg
            log_lbl.setForeground(Color.blue);
            log_lbl.setText(msg);
        } else if (msgLevel == -1) { // error msg
            log_lbl.setForeground(Color.red);
            log_lbl.setText(msg);
        }

    }

    public void disableEditingTable() {
        for (int c = 0; c < searchResult_table.getColumnCount(); c++) {
            Class<?> col_class = searchResult_table.getColumnClass(c);
            searchResult_table.setDefaultEditor(col_class, null);        // remove editor            
        }
    }

    public BaseContainer getBaseContainer() {
        return bc;
    }

    public void setBaseContainer(BaseContainer bc) {
        this.bc = bc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        user_txtbox = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        harnessPart_txtbox = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        index_txtbox = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        supplierPartNumber_txtbox = new javax.swing.JTextField();
        state_txtbox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        packType_txtbox = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        qtyRead_txtbox = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        qtyExptected_txtbox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        startTime_txtbox = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        completeTime_txtbox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        workingTime_txtbox = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        search_txtbox = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        palletId_txtbox = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        table_scroll = new javax.swing.JScrollPane();
        searchResult_table = new javax.swing.JTable();
        log_lbl = new javax.swing.JLabel();
        palletNumber_txtbox = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        pack_list_btn = new javax.swing.JButton();
        store_txt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        set_to_stored_btn = new javax.swing.JButton();
        stateCode_txtbox = new javax.swing.JTextField();
        writeTime_txtbox = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        history_btn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DÃ©claration produits finis");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(194, 227, 254));

        jLabel2.setText("User Number");

        user_txtbox.setEditable(false);
        user_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        user_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_txtboxActionPerformed(evt);
            }
        });

        jLabel8.setText("Harness Part");

        harnessPart_txtbox.setEditable(false);
        harnessPart_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        harnessPart_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                harnessPart_txtboxActionPerformed(evt);
            }
        });

        jLabel9.setText("Index");

        index_txtbox.setEditable(false);
        index_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        index_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                index_txtboxActionPerformed(evt);
            }
        });

        jLabel10.setText("Supplier Part Number");

        supplierPartNumber_txtbox.setEditable(false);
        supplierPartNumber_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        supplierPartNumber_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierPartNumber_txtboxActionPerformed(evt);
            }
        });

        state_txtbox.setEditable(false);
        state_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        state_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state_txtboxActionPerformed(evt);
            }
        });

        jLabel5.setText("State");

        packType_txtbox.setEditable(false);
        packType_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        packType_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packType_txtboxActionPerformed(evt);
            }
        });

        jLabel11.setText("Pack Type");

        qtyRead_txtbox.setEditable(false);
        qtyRead_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        qtyRead_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyRead_txtboxActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity Read");

        qtyExptected_txtbox.setEditable(false);
        qtyExptected_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        qtyExptected_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyExptected_txtboxActionPerformed(evt);
            }
        });

        jLabel3.setText("Quantity Expected");

        startTime_txtbox.setEditable(false);
        startTime_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        startTime_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTime_txtboxActionPerformed(evt);
            }
        });

        jLabel6.setText("Start Time");

        completeTime_txtbox.setEditable(false);
        completeTime_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        completeTime_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeTime_txtboxActionPerformed(evt);
            }
        });

        jLabel7.setText("Complete Time");

        workingTime_txtbox.setEditable(false);
        workingTime_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        workingTime_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workingTime_txtboxActionPerformed(evt);
            }
        });

        jLabel12.setText("Working time (min)");

        search_txtbox.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        search_txtbox.setForeground(new java.awt.Color(0, 0, 153));
        search_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_txtboxActionPerformed(evt);
            }
        });
        search_txtbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search_txtboxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_txtboxKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_txtboxKeyTyped(evt);
            }
        });

        search_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/edit-find.png"))); // NOI18N
        search_btn.setText("Search ");
        search_btn.setToolTipText("Search");
        search_btn.setBorderPainted(false);
        search_btn.setMaximumSize(new java.awt.Dimension(24, 24));
        search_btn.setMinimumSize(new java.awt.Dimension(24, 24));
        search_btn.setOpaque(false);
        search_btn.setPreferredSize(new java.awt.Dimension(24, 24));
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        jLabel1.setText("Pack Number");

        palletId_txtbox.setEditable(false);
        palletId_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        palletId_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palletId_txtboxActionPerformed(evt);
            }
        });

        jLabel13.setText("ID");

        searchResult_table.setAutoCreateRowSorter(true);
        searchResult_table.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        searchResult_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Create Time", "User", "Harness Part ", "Counter", "Pallet Number"
            }
        ));
        table_scroll.setViewportView(searchResult_table);

        log_lbl.setForeground(new java.awt.Color(0, 51, 255));
        log_lbl.setText(" ");

        palletNumber_txtbox.setEditable(false);
        palletNumber_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        palletNumber_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palletNumber_txtboxActionPerformed(evt);
            }
        });

        jLabel14.setText("Pack Number");

        pack_list_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/list.png"))); // NOI18N
        pack_list_btn.setText("List");
        pack_list_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pack_list_btnActionPerformed(evt);
            }
        });

        store_txt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        store_txt.setForeground(new java.awt.Color(0, 0, 153));
        store_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                store_txtKeyPressed(evt);
            }
        });

        jLabel15.setText("Pack Number to be stored");

        set_to_stored_btn.setBackground(new java.awt.Color(0, 102, 102));
        set_to_stored_btn.setForeground(new java.awt.Color(255, 255, 255));
        set_to_stored_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/apply.png"))); // NOI18N
        set_to_stored_btn.setText("Set to stored");
        set_to_stored_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_to_stored_btnActionPerformed(evt);
            }
        });

        stateCode_txtbox.setEditable(false);
        stateCode_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        stateCode_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateCode_txtboxActionPerformed(evt);
            }
        });

        writeTime_txtbox.setEditable(false);
        writeTime_txtbox.setBackground(new java.awt.Color(255, 255, 255));
        writeTime_txtbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeTime_txtboxActionPerformed(evt);
            }
        });

        jLabel16.setText("Write Time");

        history_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/time-icon.png"))); // NOI18N
        history_btn.setText("History");
        history_btn.setToolTipText("Search");
        history_btn.setBorderPainted(false);
        history_btn.setMaximumSize(new java.awt.Dimension(24, 24));
        history_btn.setMinimumSize(new java.awt.Dimension(24, 24));
        history_btn.setOpaque(false);
        history_btn.setPreferredSize(new java.awt.Dimension(24, 24));
        history_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(227, 227, 227))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(store_txt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(set_to_stored_btn)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(search_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pack_list_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(300, 300, 300))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(startTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(completeTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(workingTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(writeTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(palletNumber_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(user_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(history_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(qtyExptected_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(palletId_txtbox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(qtyRead_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(harnessPart_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(packType_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(index_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel5)
                                    .addComponent(state_txtbox)
                                    .addComponent(supplierPartNumber_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateCode_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(log_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1017, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1006, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(search_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pack_list_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(store_txt)
                                        .addComponent(set_to_stored_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(log_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(palletNumber_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(user_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(history_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel13))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(palletId_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(qtyRead_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(qtyExptected_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(index_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(harnessPart_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(supplierPartNumber_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(packType_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(state_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stateCode_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(startTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(completeTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(workingTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(writeTime_txtbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(table_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        store_txt.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1017, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clearSearchBox() {
        //Vider le champs de text scan
        search_txtbox.setText("");
        search_txtbox.requestFocusInWindow();
    }

    public void load_container_table_header() {
        this.reset_container_table_content();
        searchResult_table_header.add("ID");
        searchResult_table_header.add("Create Time");
        searchResult_table_header.add("User");
        searchResult_table_header.add("Harness Part");
        searchResult_table_header.add("Counter");
        searchResult_table_header.add("Pallet Number");

        searchResult_table.setModel(new DefaultTableModel(searchResult_table_data, searchResult_table_header));
    }

    public void reset_container_table_content() {
        searchResult_table_data = new Vector();
        DefaultTableModel dataModel = new DefaultTableModel(searchResult_table_data, searchResult_table_header);
        searchResult_table.setModel(dataModel);
    }

    public void reload_container_table_data(List resultList) {
        this.reset_container_table_content();

        for (Object o : resultList) {
            BaseHarness base_harness = (BaseHarness) o;
            @SuppressWarnings("UseOfObsoleteCollectionType")
            Vector<Object> oneRow = new Vector<Object>();

            oneRow.add(base_harness.getId());
            oneRow.add(base_harness.getCreateTimeString("dd/MM/yy HH:mm"));
            oneRow.add(base_harness.getUser());
            oneRow.add(base_harness.getHarnessPart());
            oneRow.add(base_harness.getCounter());
            oneRow.add(base_harness.getPalletNumber());

            searchResult_table_data.add(oneRow);
        }

        searchResult_table.setModel(new DefaultTableModel(searchResult_table_data, searchResult_table_header));
        searchResult_table.setAutoCreateRowSorter(true);
    }

    private void searchForPallet(String palletNumber) {
        log_lbl.setText("");
        this.clearContainerFieldsValues();
        this.reset_container_table_content();
        if (!palletNumber.trim().equals("")) {
            //################# Container Data ####################
            //Start transaction                
            Helper.startSession();
            Query query = Helper.sess.createQuery(HQLHelper.GET_CONTAINER_BY_NUMBER);
            query.setParameter("palletNumber", palletNumber.trim());
            Helper.sess.getTransaction().commit();
            List result = query.list();
            if (result.isEmpty()) {
                showMsg("Pallet not found !", -1);
                this.reset_container_table_content();
                //Show / Hide tools buttons
            } else {
                log_lbl.setText("");
                this.setBaseContainer((BaseContainer) result.get(0));
                this.setContainerFieldsValues(this.bc);
                //################# Harness Data ####################
                Helper.startSession();
                query = Helper.sess.createQuery(HQLHelper.GET_HP_BY_PALLET_NUMBER);
                query.setParameter("palletNumber", palletNumber.trim());
                Helper.sess.getTransaction().commit();
                result = query.list();
                //reload table data                
                this.reload_container_table_data(result);
            }

        } else {
            showMsg("Please specify existing pallet number !", -1);
            clearSearchBox();
        }

    }

    private void setContainerFieldsValues(BaseContainer bc) {
        palletNumber_txtbox.setText(String.valueOf(bc.getPalletNumber()));
        palletId_txtbox.setText(String.valueOf(bc.getId()));
        user_txtbox.setText(bc.getUser());
        harnessPart_txtbox.setText(bc.getHarnessPart());
        index_txtbox.setText(bc.getHarnessIndex());
        supplierPartNumber_txtbox.setText(bc.getSupplierPartNumber());
        qtyExptected_txtbox.setText(String.valueOf(bc.getQtyExpected()));
        qtyRead_txtbox.setText(String.valueOf(bc.getQtyRead()));
        packType_txtbox.setText(bc.getPackType());
        state_txtbox.setText(bc.getContainerState());
        stateCode_txtbox.setText(bc.getContainerStateCode());
        writeTime_txtbox.setText(String.valueOf(bc.getFifoTime()));
        startTime_txtbox.setText(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(bc.getStartTime()));
        if (bc.getClosedTime() != null) {
            completeTime_txtbox.setText(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(bc.getClosedTime()));
        }
        workingTime_txtbox.setText(String.valueOf(bc.getWorkTime()));
    }

    public void clearContainerFieldsValues() {
        palletNumber_txtbox.setText("");
        palletId_txtbox.setText("");
        user_txtbox.setText("");
        harnessPart_txtbox.setText("");
        index_txtbox.setText("");
        supplierPartNumber_txtbox.setText("");
        qtyExptected_txtbox.setText("");
        qtyRead_txtbox.setText("");
        packType_txtbox.setText("");
        state_txtbox.setText("");
        stateCode_txtbox.setText("");
        writeTime_txtbox.setText("");
        startTime_txtbox.setText("");
        completeTime_txtbox.setText("");
        workingTime_txtbox.setText("");
    }

    public void setOkText(String newTxt) {
        log_lbl.setText(newTxt);
    }

    public boolean updateStatus() {
        log_lbl.setText("");

        try {
            BaseContainer bc = new BaseContainer().checkContainerByState(store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()), GlobalVars.PALLET_CLOSED);

            if (bc != null) {
                Helper.startSession();
                this.searchForPallet(store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
                System.out.println("Exist and closed. set to stored ! " + store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
                Date fifoTime = new Date();
                bc.setContainerState(GlobalVars.PALLET_STORED);
                bc.setContainerStateCode(GlobalVars.PALLET_STORED_CODE);
                bc.setFifoTime(fifoTime);
                bc.setStoredTime(fifoTime);
                bc.update(bc);
                System.out.println("store_txt.getText() " + store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
//                Query query = Helper.sess.createQuery(HQLHelper.SET_CONTAINER_STATE_TO_STORED);
//                query.setParameter("palletNumber", store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
//                query.setParameter("containerState", GlobalVars.PALLET_STORED);
//                query.setParameter("containerStateCode", GlobalVars.PALLET_STORED_CODE);
//                query.setParameter("fifoTime", fifoTime);
//                query.setParameter("storedTime", fifoTime);
//                query.executeUpdate();

//                String q = "UPDATE base_container SET container_state = '%s', "
//                        + "container_state_code = '%s', "
//                        + "write_time = '%s', "
//                        + "stored_time = '%s'"
//                        + " WHERE pallet_number = '%s'";
//                q = String.format(q,
//                        GlobalVars.PALLET_STORED,
//                        GlobalVars.PALLET_STORED_CODE,
//                        fifoTime.toString(),
//                        fifoTime.toString(),
//                        store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
//                System.out.println("qq " + q);
//                SQLQuery sqlQuery = Helper.sess.createSQLQuery(q);
//                sqlQuery.executeUpdate();
                System.out.println("Helper.sess.getFlushMode() " + Helper.sess.getFlushMode());
                Helper.sess.getTransaction().commit();
                //Helper.sess.flush();
                //##########################################################
                //Save container update in his_base_container.
                Helper.sess.beginTransaction();
                HisBaseContainer hbc = new HisBaseContainer();
                System.out.println("Fifo TIme BC" + this.bc.getFifoTime());
                System.out.println("Fifo TIme " + fifoTime);
                this.bc.setFifoTime(fifoTime);
                hbc = hbc.parseContainerData(this.bc, "");
                hbc.setContainerState(GlobalVars.PALLET_STORED);
                hbc.setContainerStateCode(GlobalVars.PALLET_STORED_CODE);
                //hbc.setFifoTime(fifoTime);

                hbc.create(hbc);

                this.searchForPallet(store_txt.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
                showMsg("Statut palette modifiÃ© !", 1);

                if ("1".equals(GlobalVars.APP_PROP.getProperty("BOOK_PACKAGING").toString())) {
                    //Book packaging items
                    PackagingStockMovement pm = new PackagingStockMovement();
                    pm.bookMasterPack(this.bc.getCreateUser(),
                            this.bc.getPackType(), 1, "IN", GlobalVars.APP_PROP.getProperty("WH_PACKAGING"),
                            GlobalVars.APP_PROP.getProperty("WH_FINISH_GOODS"),
                            "Finish goods storage in " + GlobalVars.APP_PROP.getProperty("WH_FINISH_GOODS") + " warehouse", this.bc.getPalletNumber());
                }

                return true;
            } else {
                showMsg("Statut de la pelette doit Ãªtre 'CLOSED' ou format du numÃ©ro palette incorrecte.", -1);
                return false;
            }
        } catch (Exception e) {
            showMsg("Empty field !", -1);
            throw e;
            //return false;
        }

    }

    //########################################################################
    //################ Reset GUI Component to State S01 ######################
    //########################################################################
    public void logout() {

        if (WarehouseHelper.warehouse_control_context.getUser().getId() != null) {
            //Save authentication line in HisLogin table
            HisLogin his_login = new HisLogin(
                    WarehouseHelper.warehouse_control_context.getUser().getId(),
                    WarehouseHelper.warehouse_control_context.getUser().getId(),
                    String.format(Helper.INFO0012_LOGOUT_SUCCESS,
                            WarehouseHelper.warehouse_control_context.getUser().getFirstName()
                            + " " + WarehouseHelper.warehouse_control_context.getUser().getLastName()
                            + " / " + WarehouseHelper.warehouse_control_context.getUser().getLogin(),
                            GlobalVars.APP_HOSTNAME, GlobalMethods.getStrTimeStamp()));
            his_login.setCreateId(WarehouseHelper.warehouse_control_context.getUser().getId());
            his_login.setWriteId(WarehouseHelper.warehouse_control_context.getUser().getId());

            String str = String.format(Helper.INFO0012_LOGOUT_SUCCESS,
                    WarehouseHelper.warehouse_control_context.getUser().getFirstName() + " " + WarehouseHelper.warehouse_control_context.getUser().getLastName()
                    + " / " + PackagingVars.context.getUser().getLogin(), GlobalVars.APP_HOSTNAME,
                    GlobalMethods.getStrTimeStamp());
            his_login.setMessage(str);

            str = "";
            his_login.create(his_login);

        }
    }

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_formKeyPressed

    private void stateCode_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateCode_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateCode_txtboxActionPerformed

    private void set_to_stored_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_set_to_stored_btnActionPerformed
        if (this.updateStatus() == true) {
            store_txt.setText("");
        }
    }//GEN-LAST:event_set_to_stored_btnActionPerformed

    private void store_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_store_txtKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.updateStatus() == true) {
                store_txt.setText("");
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_store_txtKeyPressed

    private void pack_list_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pack_list_btnActionPerformed
        new WAREHOUSE_FG_UI0002_PALLET_LIST(null, true).setVisible(true);
    }//GEN-LAST:event_pack_list_btnActionPerformed

    private void palletNumber_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palletNumber_txtboxActionPerformed

    }//GEN-LAST:event_palletNumber_txtboxActionPerformed

    private void palletId_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palletId_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_palletId_txtboxActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        if (!search_txtbox.getText().equals("")
                && search_txtbox.getText().matches(Helper.PALLET_NUMBER_PATTERN)) {
            this.searchForPallet(search_txtbox.getText());
        } else if (search_txtbox.getText().toUpperCase().matches(Helper.CLOSING_PALLET_PATTERN)) {
            this.searchForPallet(search_txtbox.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
        } else {
            showMsg("Invalid pallet number !", -1);

        }
    }//GEN-LAST:event_search_btnActionPerformed

    private void search_txtboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_txtboxKeyTyped
        if (!search_txtbox.getText().isEmpty()) {
            search_btn.setEnabled(true);
        } else {
            search_btn.setEnabled(false);
            log_lbl.setText("");
        }
    }//GEN-LAST:event_search_txtboxKeyTyped

    private void search_txtboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_txtboxKeyReleased
        if (!search_txtbox.getText().isEmpty()) {
            search_btn.setEnabled(true);
        } else {
            search_btn.setEnabled(false);
            log_lbl.setText("");
        }
    }//GEN-LAST:event_search_txtboxKeyReleased

    private void search_txtboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_txtboxKeyPressed

        log_lbl.setText("");
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!search_txtbox.getText().toUpperCase().equals("")
                    && search_txtbox.getText().matches(Helper.PALLET_NUMBER_PATTERN)) {
                this.searchForPallet(search_txtbox.getText());
            } else if (!search_txtbox.getText().toUpperCase().equals("")
                    && search_txtbox.getText().toUpperCase().matches(Helper.CLOSING_PALLET_PATTERN)) {
                this.searchForPallet(search_txtbox.getText().substring(GlobalVars.CLOSING_PALLET_PREFIX.length()));
            } else {
                showMsg("Invalid pallet number !", -1);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        } else if (evt.getKeyCode() == KeyEvent.VK_CLEAR) {
            this.search_txtbox.setText("");
            this.reset_container_table_content();
        } else {
            if (!search_txtbox.getText().isEmpty()) {
                search_btn.setEnabled(true);
            } else {
                search_btn.setEnabled(false);
                log_lbl.setText("");
            }
        }
    }//GEN-LAST:event_search_txtboxKeyPressed

    private void search_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_txtboxActionPerformed

    private void workingTime_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workingTime_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workingTime_txtboxActionPerformed

    private void completeTime_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeTime_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_completeTime_txtboxActionPerformed

    private void startTime_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTime_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startTime_txtboxActionPerformed

    private void qtyExptected_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyExptected_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyExptected_txtboxActionPerformed

    private void qtyRead_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyRead_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyRead_txtboxActionPerformed

    private void packType_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packType_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_packType_txtboxActionPerformed

    private void state_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state_txtboxActionPerformed

    private void supplierPartNumber_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierPartNumber_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierPartNumber_txtboxActionPerformed

    private void index_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_index_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_index_txtboxActionPerformed

    private void harnessPart_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_harnessPart_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_harnessPart_txtboxActionPerformed

    private void user_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_txtboxActionPerformed

    private void writeTime_txtboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeTime_txtboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_writeTime_txtboxActionPerformed

    private void history_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history_btnActionPerformed
        new PACKAGING_UI0014_PalletHistory(null, true, palletNumber_txtbox.getText()).setVisible(true);
    }//GEN-LAST:event_history_btnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField completeTime_txtbox;
    private javax.swing.JTextField harnessPart_txtbox;
    private javax.swing.JButton history_btn;
    private javax.swing.JTextField index_txtbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel log_lbl;
    private javax.swing.JTextField packType_txtbox;
    private javax.swing.JButton pack_list_btn;
    private javax.swing.JTextField palletId_txtbox;
    private javax.swing.JTextField palletNumber_txtbox;
    private javax.swing.JTextField qtyExptected_txtbox;
    private javax.swing.JTextField qtyRead_txtbox;
    private javax.swing.JTable searchResult_table;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField search_txtbox;
    private javax.swing.JButton set_to_stored_btn;
    private javax.swing.JTextField startTime_txtbox;
    private javax.swing.JTextField stateCode_txtbox;
    private javax.swing.JTextField state_txtbox;
    private javax.swing.JTextField store_txt;
    private javax.swing.JTextField supplierPartNumber_txtbox;
    private javax.swing.JScrollPane table_scroll;
    private javax.swing.JTextField user_txtbox;
    private javax.swing.JTextField workingTime_txtbox;
    private javax.swing.JTextField writeTime_txtbox;
    // End of variables declaration//GEN-END:variables

}
