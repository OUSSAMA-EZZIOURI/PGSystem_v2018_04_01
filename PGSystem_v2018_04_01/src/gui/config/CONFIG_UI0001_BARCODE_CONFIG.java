/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.config;

import helper.Helper;
import entity.BaseContainer;
import entity.ConfigBarcode;
import gui.packaging.PackagingVars;
import helper.ComboItem;
import helper.HQLHelper;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.SQLQuery;

/**
 *
 * @author user
 */
public class CONFIG_UI0001_BARCODE_CONFIG extends javax.swing.JFrame {

    Vector<String> barCode_table_header = new Vector<String>();
    List<String> table_header = Arrays.asList(
            "ID",
            "Harness Type",
            "Barcode Pattern",
            "Description",
            "UCS ID",
            "Key Word",
            "Harness part"
    );

    Vector barCode_table_data = new Vector();
    private BaseContainer bc = new BaseContainer();
    ConfigBarcode aux;
    public List<Object[]> dataResultList;

    /**
     * Creates new form UI0010_PalletDetails
     *
     * @param parent
     * @param modal
     */
    public CONFIG_UI0001_BARCODE_CONFIG(java.awt.Frame parent, boolean modal) {

        initComponents();
        initGui();
        refresh();
    }

    CONFIG_UI0001_BARCODE_CONFIG() {
        initComponents();
        initGui();
        refresh();
    }

    private void initGui() {
        //Center the this dialog in the screen
        Helper.centerJFrame(this);
        harnessTypeBox.addItem(new ComboItem("", ""));
        Helper.loadProjectsInJbox(harnessTypeBox);
        //Desable table edition
        //disableEditingTable();
        //Load table header
        load_table_header();

        //Support double click on rows in container jtable to display history
        this.initContainerTableDoubleClick();
    }

    private void initContainerTableDoubleClick() {
        this.barcode_table.addMouseListener(
                new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    Helper.startSession();
                    Query query = Helper.sess.createQuery(HQLHelper.GET_PATTERN_BY_ID);
                    query.setParameter("id", Integer.valueOf(barcode_table.getValueAt(barcode_table.getSelectedRow(), 0).toString()));
                    Helper.sess.getTransaction().commit();
                    aux = (ConfigBarcode) query.list().get(0);
                    id_txt.setText(aux.getId() + "");
                    create_time_txt.setText(aux.getCreateTime().toString());
                    write_time_txt.setText(aux.getWriteTime().toString());
                    for (int i = 0; i < harnessTypeBox.getItemCount(); i++) {
                        if (harnessTypeBox.getItemAt(i).toString().equals(aux.getHarnessType())) {
                            harnessTypeBox.setSelectedIndex(i);
                            break;
                        }
                    }
                    pattern_txt.setText(aux.getBarcodePattern());
                    keyword_txt.setText(aux.getKeyWord());
                    cpn_txt.setText(aux.getHarnessPart());
                    description_txt.setText(aux.getDescription());
                    delete_btn.setEnabled(true);
                    duplicate_btn.setEnabled(true);
                }
            }
        }
        );
    }

    private void load_table_header() {
        this.reset_table_content();

        for (Iterator<String> it = table_header.iterator(); it.hasNext();) {
            barCode_table_header.add(it.next());
        }

        barcode_table.setModel(new DefaultTableModel(barCode_table_data, barCode_table_header));
    }

    private void reset_table_content() {

        barCode_table_data = new Vector();
        DefaultTableModel dataModel = new DefaultTableModel(barCode_table_data, barCode_table_header);
        barcode_table.setModel(dataModel);
    }

    public void disableEditingTable() {
        for (int c = 0; c < barcode_table.getColumnCount(); c++) {
            Class<?> col_class = barcode_table.getColumnClass(c);
            barcode_table.setDefaultEditor(col_class, null);        // remove editor            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        barcode_table = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        save_btn = new javax.swing.JButton();
        duplicate_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        id_txt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pattern_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        keyword_txt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cpn_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        harnessTypeBox = new javax.swing.JComboBox();
        msg_lbl = new javax.swing.JLabel();
        clear_btn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        description_txt = new javax.swing.JTextArea();
        lname_lbl1 = new javax.swing.JLabel();
        create_time_txt = new javax.swing.JTextField();
        lname_lbl2 = new javax.swing.JLabel();
        write_time_txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        search_harness_part = new javax.swing.JTextField();
        filter_btn = new javax.swing.JButton();
        search_keyword = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        search_harness_type = new javax.swing.JTextField();
        clear_filters_btn = new javax.swing.JButton();

        setTitle("Configuration des codes à barres");
        setName("Configuration des codes à barres"); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        barcode_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(barcode_table);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setText("Configuration des codes à barres");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        save_btn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        save_btn.setText("Save");
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        duplicate_btn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        duplicate_btn.setText("Dupliquer");
        duplicate_btn.setEnabled(false);
        duplicate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duplicate_btnActionPerformed(evt);
            }
        });

        delete_btn.setBackground(new java.awt.Color(255, 51, 0));
        delete_btn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        delete_btn.setText("Delete");
        delete_btn.setEnabled(false);
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID");

        id_txt.setEditable(false);
        id_txt.setBackground(new java.awt.Color(255, 255, 255));
        id_txt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        id_txt.setForeground(new java.awt.Color(0, 51, 255));

        jLabel2.setText("Harness Type");

        jLabel3.setText("Pattern (Java Regex)");

        jLabel4.setText("Key Word");

        jLabel5.setText("Customer Part Num");

        jLabel7.setText("Description");

        msg_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        msg_lbl.setForeground(new java.awt.Color(0, 0, 255));

        clear_btn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        clear_btn.setText("Clear");
        clear_btn.setToolTipText("Filter");
        clear_btn.setBorderPainted(false);
        clear_btn.setMaximumSize(new java.awt.Dimension(24, 24));
        clear_btn.setMinimumSize(new java.awt.Dimension(24, 24));
        clear_btn.setOpaque(false);
        clear_btn.setPreferredSize(new java.awt.Dimension(24, 24));
        clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("https://fr.wikibooks.org/wiki/Programmation_Java/Regex");

        description_txt.setColumns(20);
        description_txt.setRows(5);
        jScrollPane2.setViewportView(description_txt);

        lname_lbl1.setText("Creation Date");

        create_time_txt.setEditable(false);
        create_time_txt.setName("fname_txtbox"); // NOI18N

        lname_lbl2.setText("Write Date");

        write_time_txt.setEditable(false);
        write_time_txt.setName("fname_txtbox"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(duplicate_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(harnessTypeBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 209, Short.MAX_VALUE)
                                        .addComponent(keyword_txt, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lname_lbl1)
                                        .addGap(23, 23, 23)
                                        .addComponent(create_time_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(lname_lbl2)
                                        .addGap(18, 18, 18)
                                        .addComponent(write_time_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(pattern_txt, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cpn_txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(404, 404, 404))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(373, 373, 373)
                    .addComponent(msg_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(343, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(create_time_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lname_lbl2)
                        .addComponent(write_time_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lname_lbl1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(pattern_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(harnessTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(keyword_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cpn_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(delete_btn)
                    .addComponent(clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duplicate_btn)
                    .addComponent(save_btn))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(0, 154, Short.MAX_VALUE)
                    .addComponent(msg_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel6.setText("Customer P.N");

        search_harness_part.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search_harness_partKeyPressed(evt);
            }
        });

        filter_btn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        filter_btn.setText("Filter");
        filter_btn.setToolTipText("Filter");
        filter_btn.setBorderPainted(false);
        filter_btn.setMaximumSize(new java.awt.Dimension(24, 24));
        filter_btn.setMinimumSize(new java.awt.Dimension(24, 24));
        filter_btn.setOpaque(false);
        filter_btn.setPreferredSize(new java.awt.Dimension(24, 24));
        filter_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_btnActionPerformed(evt);
            }
        });

        search_keyword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search_keywordKeyPressed(evt);
            }
        });

        jLabel8.setText("Key Word");

        jLabel9.setText("Harness Type");

        search_harness_type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search_harness_typeKeyPressed(evt);
            }
        });

        clear_filters_btn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        clear_filters_btn.setText("Clear Filters");
        clear_filters_btn.setToolTipText("Filter");
        clear_filters_btn.setBorderPainted(false);
        clear_filters_btn.setMaximumSize(new java.awt.Dimension(24, 24));
        clear_filters_btn.setMinimumSize(new java.awt.Dimension(24, 24));
        clear_filters_btn.setOpaque(false);
        clear_filters_btn.setPreferredSize(new java.awt.Dimension(24, 24));
        clear_filters_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_filters_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(search_harness_part, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(16, 16, 16)
                                .addComponent(search_keyword, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(16, 16, 16)
                                .addComponent(search_harness_type, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(filter_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clear_filters_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1470, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel8)
                        .addComponent(search_keyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(search_harness_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search_harness_part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(filter_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clear_filters_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clearSearchBox() {
        //Vider le champs de text scan

    }

    public void reset_container_table_content() {
        barCode_table_data = new Vector();
        DefaultTableModel dataModel = new DefaultTableModel(barCode_table_data, barCode_table_header);
        barcode_table.setModel(dataModel);
    }

    public void reload_barcode_table_data(List<Object[]> resultList) {
        this.reset_container_table_content();
        for (Object[] obj : resultList) {
            @SuppressWarnings("UseOfObsoleteCollectionType")
            Vector<Object> oneRow = new Vector<Object>();

            oneRow.add(String.valueOf(obj[0])); //ID
            oneRow.add(String.valueOf(obj[1])); //Customer
            oneRow.add(String.valueOf(obj[2])); //Barcode Pattern
            oneRow.add(String.valueOf(obj[3])); //Description
            oneRow.add(String.valueOf(obj[4])); //UCS ID
            oneRow.add(String.valueOf(obj[5])); //Key Word
            oneRow.add(String.valueOf(obj[6])); //Harness part
            barCode_table_data.add(oneRow);
        }

        barcode_table.setModel(new DefaultTableModel(barCode_table_data, barCode_table_header));
        barcode_table.setAutoCreateRowSorter(true);
    }

    private void refresh() {

        //################# Harness Data ####################       
        Helper.startSession();
        try {
            String query_str = " SELECT "
                    + " c.id AS id, "
                    + " c.harness_type AS harness_type, "
                    + " c.barcode_pattern AS barcode_pattern, "
                    + " c.description AS description, "
                    + " c.ucs_id AS ucs_id, "
                    + " c.key_word AS key_word, "
                    + " c.harness_part AS harness_part "
                    + " FROM Config_Barcode c "
                    + " WHERE 1=1 ";
            if (!search_harness_part.getText().trim().equals("")) {
                query_str += " AND harness_part LIKE '%" + search_harness_part.getText().trim() + "%'";
            }
            if (!search_harness_type.getText().trim().equals("")) {
                query_str += " AND harness_type LIKE '%" + search_harness_type.getText().trim() + "%'";
            }
            if (!search_keyword.getText().trim().equals("")) {
                query_str += " AND key_word LIKE '%" + search_keyword.getText().trim() + "%'";
            }

            query_str += " ORDER BY id DESC";

            SQLQuery query = Helper.sess.createSQLQuery(query_str);

            dataResultList = query.list();

            this.reload_barcode_table_data(dataResultList);

            Helper.sess.getTransaction().commit();

            this.disableEditingTable();

        } catch (HibernateException e) {
            if (Helper.sess.getTransaction() != null) {
                Helper.sess.getTransaction().rollback();
            }
            e.printStackTrace();
        }
    }

    private void clearFields() {
        id_txt.setText("");
        create_time_txt.setText("");
        write_time_txt.setText("");
        harnessTypeBox.setSelectedIndex(0);
        pattern_txt.setText("");
        keyword_txt.setText("");
        cpn_txt.setText("");
        description_txt.setText("");
        msg_lbl.setText("");
        aux = null;
        delete_btn.setEnabled(false);
        duplicate_btn.setEnabled(false);
    }

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_formKeyPressed

    private void duplicate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duplicate_btnActionPerformed
        id_txt.setText("");
        create_time_txt.setText("");
        write_time_txt.setText("");
        for (int i = 0; i < harnessTypeBox.getItemCount(); i++) {
            if (harnessTypeBox.getItemAt(i).toString().equals(aux.getHarnessType())) {
                harnessTypeBox.setSelectedIndex(i);
                break;
            }
        }
        pattern_txt.setText(aux.getBarcodePattern());
        keyword_txt.setText(aux.getKeyWord());
        cpn_txt.setText(aux.getHarnessPart());
        description_txt.setText(aux.getDescription());
        this.aux = null;
        msg_lbl.setText("Element dupliqué !");
    }//GEN-LAST:event_duplicate_btnActionPerformed

    private void filter_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_btnActionPerformed
        refresh();
    }//GEN-LAST:event_filter_btnActionPerformed

    private void clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed
        clearFields();
    }//GEN-LAST:event_clear_btnActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        if (id_txt.getText().isEmpty()) { // ID Label is empty, then is a new Object
            ConfigBarcode cb = new ConfigBarcode();
            cb.setBarcodePattern(pattern_txt.getText());
            cb.setHarnessType(harnessTypeBox.getSelectedItem().toString());
            cb.setHarnessPart(cpn_txt.getText().trim());
            cb.setKeyWord(keyword_txt.getText().trim());
            cb.setDescription(description_txt.getText());
            cb.setCreateId(PackagingVars.context.getUser().getId());
            cb.setWriteId(PackagingVars.context.getUser().getId());
            cb.setCreateTime(new Date());
            cb.setWriteTime(new Date());
            cb.create(cb);
            clearFields();
            msg_lbl.setText("Nouveau élément enregistré !");
            refresh();
        } else {//It's an update for an existing element
            aux.setWriteTime(new Date());
            aux.setWriteId(PackagingVars.context.getUser().getId());
            aux.setBarcodePattern(pattern_txt.getText());
            aux.setHarnessType(harnessTypeBox.getSelectedItem().toString());
            aux.setHarnessPart(cpn_txt.getText().trim());
            aux.setKeyWord(keyword_txt.getText().trim());
            aux.setDescription(description_txt.getText());
            aux.update(aux);
            clearFields();
            msg_lbl.setText("Changements enregistrés !");
            refresh();
        }
    }//GEN-LAST:event_save_btnActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        int confirmed = JOptionPane.showConfirmDialog(this,
                String.format("Confirmez-vous la suppression de cet élement [%s] ?",
                        this.aux.getId()),
                "Suppression ?",
                JOptionPane.WARNING_MESSAGE);

        if (confirmed == 0) {
            aux.delete(aux);
            clearFields();
            msg_lbl.setText("Elément supprimé !");
            refresh();
        }
    }//GEN-LAST:event_delete_btnActionPerformed

    private void clear_filters_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_filters_btnActionPerformed
        search_harness_part.setText("");
        search_harness_type.setText("");
        search_keyword.setText("");
    }//GEN-LAST:event_clear_filters_btnActionPerformed

    private void search_harness_partKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_harness_partKeyPressed
        refresh();
    }//GEN-LAST:event_search_harness_partKeyPressed

    private void search_keywordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_keywordKeyPressed
        refresh();
    }//GEN-LAST:event_search_keywordKeyPressed

    private void search_harness_typeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_harness_typeKeyPressed
        refresh();
    }//GEN-LAST:event_search_harness_typeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable barcode_table;
    private javax.swing.JButton clear_btn;
    private javax.swing.JButton clear_filters_btn;
    private javax.swing.JTextField cpn_txt;
    private javax.swing.JTextField create_time_txt;
    private javax.swing.JButton delete_btn;
    private javax.swing.JTextArea description_txt;
    private javax.swing.JButton duplicate_btn;
    private javax.swing.JButton filter_btn;
    private javax.swing.JComboBox harnessTypeBox;
    private javax.swing.JTextField id_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField keyword_txt;
    private javax.swing.JLabel lname_lbl1;
    private javax.swing.JLabel lname_lbl2;
    private javax.swing.JLabel msg_lbl;
    private javax.swing.JTextField pattern_txt;
    private javax.swing.JButton save_btn;
    private javax.swing.JTextField search_harness_part;
    private javax.swing.JTextField search_harness_type;
    private javax.swing.JTextField search_keyword;
    private javax.swing.JTextField write_time_txt;
    // End of variables declaration//GEN-END:variables

    void clearSearchBox(String string) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
